import com.sun.net.httpserver.HttpServer;

import java.io.*;
import java.net.InetSocketAddress;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class $proxyName {

    private static Process currentProcess = null;

    public static void main(String[] args) throws Exception {
        HttpServer server = HttpServer.create(new InetSocketAddress($port), 0);
        #foreach($endpoint in $endpoints)
        server.createContext("$endpoint", exchange -> {
            handleRequest(exchange, "$endpointJars.get($endpoint)");
        });
        #end

        server.start();
        System.out.println("Server started on port $port");
    }

    private static void handleRequest(com.sun.net.httpserver.HttpExchange exchange, String jarName) {
        try {
            if ("GET".equals(exchange.getRequestMethod())) {
                if (currentProcess != null) currentProcess.destroy();

                try {
                    currentProcess = new ProcessBuilder("java", "-jar", "/app/" + jarName).start();
                    sendResponse(exchange, 200, "Successfully started: " + jarName);
                    System.out.println("Started JAR: " + jarName);
                } catch (Exception e) {
                    System.out.println("Failed to start: " + jarName);
                    sendResponse(exchange, 500, "Failed to start: " + jarName + "\nError: " + e.getMessage());
                }
            } else {
                sendResponse(exchange, 405, "Method Not Allowed");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            exchange.close();
        }
    }

    private static void sendResponse(com.sun.net.httpserver.HttpExchange exchange, int statusCode, String responseText) {
        try {
            byte[] responseBytes = responseText.getBytes(StandardCharsets.UTF_8);
            exchange.sendResponseHeaders(statusCode, responseBytes.length);
            OutputStream os = exchange.getResponseBody();
            os.write(responseBytes);
            os.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
