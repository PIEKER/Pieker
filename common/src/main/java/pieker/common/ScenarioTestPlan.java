package pieker.common;

import pieker.api.Assertion;
import pieker.common.dto.RunDto;

import java.util.Collection;
import java.util.List;
import java.util.Map;

/**
 * Interface for a test plan that is generated by PIEKER for a given test scenario.
 */
public interface ScenarioTestPlan {

    /**
     * @return scenario name
     */
    String getName();

    /**
     * @return every component used for proxying connections
     */
    Collection<ScenarioProxyComponent> getProxyComponents();

    /**
     * @return every component used for traffic generation
     */
    Collection<ScenarioTrafficComponent> getTrafficComponents();

    /**
     * @return every component required for test-environment
     */
    Collection<ScenarioComponent> getComponents();

    /**
     * @return every test step id
     */
    Collection<String> getStepIds();

    /**
     * @return step containing preconditions for every test-step
     */
    TestStep getBeforeEachStep();

    /**
     * @return every test step in the scenario
     */
    Collection<TestStep> getTestSteps();

    /**
     * @return map of stepIds to duration (max keep-alive time for a test-step)
     */
    Map<String, Long> getStepToDurationMap();

    /**
     * @return Map of stepIds to a list of assertions, ordered by assertAfter attribute
     */
    Map<String, List<Assertion>> getAssertionsMap();

    RunDto createTestRunDto();

}
